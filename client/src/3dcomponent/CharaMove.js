/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 chara_move.glb
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useEffect } from 'react'
import * as THREE from "three";
import { useFrame } from 'react-three-fiber';


export function CharaMove(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/chara_move.glb')
  const { actions } = useAnimations(animations, group)



  useFrame(() => {
    console.log(actions._clip)
    const clip = actions.play.getClip(); // Get the animation clip
    clip.loop = THREE.LoopOnce; // Set the animation to play only once

    const duration = clip.duration;
    
    const up = new THREE.Vector3(0, 1, 0);
    const down = new THREE.Vector3(0, -1, 0);

    const upTrack = new THREE.VectorKeyframeTrack('.position', [0, duration / 2, duration], [0, 0, 0, up.x, up.y, up.z, 0, 0, 0]);
    const downTrack = new THREE.VectorKeyframeTrack('.position', [0, duration / 2, duration], [up.x, up.y, up.z, down.x, down.y, down.z, up.x, up.y, up.z]);
    const clipTracks = [upTrack, downTrack];

/*     const clipAction = mixer.clipAction(clip);
    clipAction.setLoop(THREE.LoopPingPong); // Set the animation to play back and forth
    clipAction.setEffectiveTimeScale(2);
    clipAction.setEffectiveWeight(1);
    clipAction.play(); */

    return () => {
      //mixer.uncacheClip(clip);
    };
  }, [actions]);
 
  console.log(actions)
  
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Beta_Joints" geometry={nodes.Beta_Joints.geometry} material={materials.Beta_Joints_MAT1} skeleton={nodes.Beta_Joints.skeleton} />
          <skinnedMesh name="Beta_Surface" geometry={nodes.Beta_Surface.geometry} material={materials.Beta_HighLimbsGeoSG3} skeleton={nodes.Beta_Surface.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/chara_move.glb')
